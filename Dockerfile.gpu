# syntax=docker/dockerfile:labs
ARG tag

FROM nvidia/cuda:10.1-cudnn7-runtime-ubuntu18.04 as deepstack-base-cuda

RUN apt-key adv --fetch-keys http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/3bf863cc.pub
RUN apt-get update -y
RUN apt install software-properties-common -y
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN apt update -y
RUN apt-get install python3 -y
RUN apt-get install python3-pip -y
RUN apt-get install redis-server -y 
RUN pip3 install --upgrade setuptools pip
RUN apt-get install libsm6 libxext6 libxrender1 libglib2.0-0 ffmpeg -y

FROM deepstack-base-cuda as deepstack-base-gpu

RUN apt-get install libsm6 libxext6 libxrender1 libglib2.0-0 ffmpeg -y

FROM --platform=$BUILDPLATFORM golang:1.17.6 AS gobuilder
ARG TARGETPLATFORM
ARG TARGETOS
ARG TARGETARCH

ENV GOOS=${TARGETOS}
ENV GOARCH=${TARGETARCH}

WORKDIR /build

# Cache dependencies
COPY ./server/go.mod ./server/go.sum ./
RUN --mount=type=cache,target=/root/.cache/go-build go mod download

COPY ./server .
RUN --mount=type=cache,target=/root/.cache/go-build go build -ldflags "-s -w" -trimpath

FROM --platform=$BUILDPLATFORM python:3.10-alpine as downloader
WORKDIR /app
RUN mkdir /app/sharedfiles

ADD download_dependencies.py ./download_dependencies.py
RUN python3 -mensurepip
#RUN python3 -mpip install wget
#RUN python3 download_dependencies.py


FROM deepstack-base-${tag} as gpu

ENV SLEEP_TIME 0.01
ENV TIMEOUT 60
ENV SEND_LOGS True
ENV CUDA_MODE True
ENV APPDIR /app

RUN mkdir /deeptemp
RUN mkdir /datastore

ENV DATA_DIR /datastore
ENV TEMP_PATH /deeptemp/
ENV PROFILE desktop_gpu

WORKDIR /app

RUN pip install onnxruntime

RUN pip3 install redis
RUN pip3 install opencv-python
RUN pip3 install Cython
RUN pip3 install pillow
RUN pip3 install scipy
RUN pip3 install tqdm
RUN pip3 install tensorboard
RUN pip3 install PyYAML
RUN pip3 install Matplotlib
RUN pip3 install easydict
RUN pip3 install future
RUN pip3 install numpy

#RUN mkdir /app/sharedfiles
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/yolov5m.pt /app/sharedfiles/yolov5m.pt
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/face.pt /app/sharedfiles/face.pt
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/facerec-high.model /app/sharedfiles/facerec-high.model
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/scene.pt /app/sharedfiles/scene.pt
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/categories_places365.txt /app/sharedfiles/categories_places365.txt
ADD https://huggingface.co/skrashevich/deepstack/resolve/main/bebygan_x4.pth /app/sharedfiles/bebygan_x4.pth
#COPY --link --from=deepquestai/deepstack:latest /app/sharedfiles /app/sharedfiles

COPY --link --from=gobuilder /build/server /app/server/server
ADD ./server/assets /app/server/assets
ADD ./server/templates /app/server/templates
ADD ./server/index.html /app/server/index.html
ADD ./server/version.txt /app/server/version.txt

WORKDIR /app

RUN mkdir /app/intelligencelayer
COPY ./intelligencelayer /app/intelligencelayer

COPY ./init.py /app 

EXPOSE 5000

WORKDIR /app/server

CMD ["/app/server/server"]
